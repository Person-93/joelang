[
	{
		"type": "comment",
		"start": 0,
		"end": 63,
		"value": "# This is sample .joe file to prove the lexer and parser works.",
		"line": 1,
		"col": 1
	},
	{
		"type": "comment",
		"start": 64,
		"end": 125,
		"value": "# Note this file may not necessarily be syntatically correct.",
		"line": 2,
		"col": 1
	},
	{
		"type": "keyword",
		"start": 127,
		"end": 133,
		"value": "import",
		"line": 4,
		"col": 1
	},
	{
		"type": "identifier",
		"start": 134,
		"end": 139,
		"value": "lexer",
		"line": 4,
		"col": 8
	},
	{
		"type": "keyword",
		"start": 140,
		"end": 144,
		"value": "from",
		"line": 4,
		"col": 14
	},
	{
		"type": "filepath",
		"start": 145,
		"end": 152,
		"value": "./lexer",
		"line": 4,
		"col": 19
	},
	{
		"type": "semicolon",
		"start": 152,
		"end": 153,
		"value": ";",
		"line": 4,
		"col": 26
	},
	{
		"type": "keyword",
		"start": 154,
		"end": 160,
		"value": "import",
		"line": 5,
		"col": 1
	},
	{
		"type": "identifier",
		"start": 161,
		"end": 167,
		"value": "lexer2",
		"line": 5,
		"col": 8
	},
	{
		"type": "keyword",
		"start": 168,
		"end": 172,
		"value": "from",
		"line": 5,
		"col": 15
	},
	{
		"type": "filepath",
		"start": 173,
		"end": 184,
		"value": "@/lexer.joe",
		"line": 5,
		"col": 20
	},
	{
		"type": "semicolon",
		"start": 184,
		"end": 185,
		"value": ";",
		"line": 5,
		"col": 31
	},
	{
		"type": "keyword",
		"start": 187,
		"end": 192,
		"value": "class",
		"line": 7,
		"col": 1
	},
	{
		"type": "identifier",
		"start": 193,
		"end": 196,
		"value": "Foo",
		"line": 7,
		"col": 7
	},
	{
		"type": "keyword",
		"start": 197,
		"end": 204,
		"value": "extends",
		"line": 7,
		"col": 11
	},
	{
		"type": "identifier",
		"start": 205,
		"end": 208,
		"value": "Bar",
		"line": 7,
		"col": 19
	},
	{
		"type": "comma",
		"start": 208,
		"end": 209,
		"value": ",",
		"line": 7,
		"col": 22
	},
	{
		"type": "identifier",
		"start": 210,
		"end": 213,
		"value": "Baz",
		"line": 7,
		"col": 24
	},
	{
		"type": "keyword",
		"start": 214,
		"end": 224,
		"value": "implements",
		"line": 7,
		"col": 28
	},
	{
		"type": "identifier",
		"start": 225,
		"end": 239,
		"value": "AbstractFooBar",
		"line": 7,
		"col": 39
	},
	{
		"type": "comma",
		"start": 239,
		"end": 240,
		"value": ",",
		"line": 7,
		"col": 53
	},
	{
		"type": "identifier",
		"start": 241,
		"end": 261,
		"value": "AnotherAbstractClass",
		"line": 7,
		"col": 55
	},
	{
		"type": "brace_open",
		"start": 262,
		"end": 263,
		"value": "{",
		"line": 7,
		"col": 76
	},
	{
		"type": "keyword",
		"start": 265,
		"end": 271,
		"value": "static",
		"line": 8,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 272,
		"end": 275,
		"value": "bar",
		"line": 8,
		"col": 9
	},
	{
		"type": "assign",
		"start": 276,
		"end": 277,
		"value": "=",
		"line": 8,
		"col": 13
	},
	{
		"type": "string",
		"start": 278,
		"end": 283,
		"value": "baz",
		"line": 8,
		"col": 15
	},
	{
		"type": "semicolon",
		"start": 283,
		"end": 284,
		"value": ";",
		"line": 8,
		"col": 20
	},
	{
		"type": "comment",
		"start": 285,
		"end": 310,
		"value": "// public static property",
		"line": 8,
		"col": 22
	},
	{
		"type": "keyword",
		"start": 312,
		"end": 319,
		"value": "private",
		"line": 9,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 320,
		"end": 327,
		"value": "isDone?",
		"line": 9,
		"col": 10
	},
	{
		"type": "assign",
		"start": 328,
		"end": 329,
		"value": "=",
		"line": 9,
		"col": 18
	},
	{
		"type": "bool",
		"start": 330,
		"end": 334,
		"value": "true",
		"line": 9,
		"col": 20
	},
	{
		"type": "comment",
		"start": 335,
		"end": 363,
		"value": "// private instance property",
		"line": 9,
		"col": 25
	},
	{
		"type": "comment",
		"start": 366,
		"end": 406,
		"value": "/** method with no args and no return */",
		"line": 11,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 408,
		"end": 411,
		"value": "foo",
		"line": 12,
		"col": 2
	},
	{
		"type": "brace_open",
		"start": 412,
		"end": 413,
		"value": "{",
		"line": 12,
		"col": 6
	},
	{
		"type": "keyword",
		"start": 416,
		"end": 421,
		"value": "const",
		"line": 13,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 422,
		"end": 426,
		"value": "size",
		"line": 13,
		"col": 9
	},
	{
		"type": "assign",
		"start": 427,
		"end": 428,
		"value": "=",
		"line": 13,
		"col": 14
	},
	{
		"type": "keyword",
		"start": 429,
		"end": 435,
		"value": "switch",
		"line": 13,
		"col": 16
	},
	{
		"type": "identifier",
		"start": 436,
		"end": 446,
		"value": "someNumber",
		"line": 13,
		"col": 23
	},
	{
		"type": "brace_open",
		"start": 447,
		"end": 448,
		"value": "{",
		"line": 13,
		"col": 34
	},
	{
		"type": "keyword",
		"start": 452,
		"end": 454,
		"value": "is",
		"line": 14,
		"col": 4
	},
	{
		"type": "number",
		"start": 455,
		"end": 456,
		"value": "1",
		"line": 14,
		"col": 7
	},
	{
		"type": "comma",
		"start": 456,
		"end": 457,
		"value": ",",
		"line": 14,
		"col": 8
	},
	{
		"type": "keyword",
		"start": 458,
		"end": 460,
		"value": "is",
		"line": 14,
		"col": 10
	},
	{
		"type": "number",
		"start": 461,
		"end": 462,
		"value": "2",
		"line": 14,
		"col": 13
	},
	{
		"type": "colon",
		"start": 462,
		"end": 463,
		"value": ":",
		"line": 14,
		"col": 14
	},
	{
		"type": "string",
		"start": 464,
		"end": 471,
		"value": "small",
		"line": 14,
		"col": 16
	},
	{
		"type": "semicolon",
		"start": 471,
		"end": 472,
		"value": ";",
		"line": 14,
		"col": 23
	},
	{
		"type": "keyword",
		"start": 476,
		"end": 478,
		"value": "is",
		"line": 15,
		"col": 4
	},
	{
		"type": "keyword",
		"start": 479,
		"end": 481,
		"value": "in",
		"line": 15,
		"col": 7
	},
	{
		"type": "number",
		"start": 482,
		"end": 483,
		"value": "3",
		"line": 15,
		"col": 10
	},
	{
		"type": "dotdot",
		"start": 483,
		"end": 485,
		"value": "..",
		"line": 15,
		"col": 11
	},
	{
		"type": "number",
		"start": 485,
		"end": 487,
		"value": "10",
		"line": 15,
		"col": 13
	},
	{
		"type": "colon",
		"start": 487,
		"end": 488,
		"value": ":",
		"line": 15,
		"col": 15
	},
	{
		"type": "string",
		"start": 489,
		"end": 497,
		"value": "medium",
		"line": 15,
		"col": 17
	},
	{
		"type": "semicolon",
		"start": 497,
		"end": 498,
		"value": ";",
		"line": 15,
		"col": 25
	},
	{
		"type": "keyword",
		"start": 502,
		"end": 504,
		"value": "is",
		"line": 16,
		"col": 4
	},
	{
		"type": "number",
		"start": 505,
		"end": 507,
		"value": "11",
		"line": 16,
		"col": 7
	},
	{
		"type": "colon",
		"start": 507,
		"end": 508,
		"value": ":",
		"line": 16,
		"col": 9
	},
	{
		"type": "string",
		"start": 509,
		"end": 516,
		"value": "large",
		"line": 16,
		"col": 11
	},
	{
		"type": "semicolon",
		"start": 516,
		"end": 517,
		"value": ";",
		"line": 16,
		"col": 18
	},
	{
		"type": "identifier",
		"start": 521,
		"end": 525,
		"value": "else",
		"line": 17,
		"col": 4
	},
	{
		"type": "colon",
		"start": 525,
		"end": 526,
		"value": ":",
		"line": 17,
		"col": 8
	},
	{
		"type": "string",
		"start": 527,
		"end": 543,
		"value": "off the charts",
		"line": 17,
		"col": 10
	},
	{
		"type": "semicolon",
		"start": 543,
		"end": 544,
		"value": ";",
		"line": 17,
		"col": 26
	},
	{
		"type": "brace_close",
		"start": 547,
		"end": 548,
		"value": "}",
		"line": 18,
		"col": 3
	},
	{
		"type": "keyword",
		"start": 552,
		"end": 555,
		"value": "let",
		"line": 20,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 556,
		"end": 563,
		"value": "myTuple",
		"line": 20,
		"col": 7
	},
	{
		"type": "assign",
		"start": 564,
		"end": 565,
		"value": "=",
		"line": 20,
		"col": 15
	},
	{
		"type": "bracket_open",
		"start": 566,
		"end": 567,
		"value": "[",
		"line": 20,
		"col": 17
	},
	{
		"type": "number",
		"start": 571,
		"end": 572,
		"value": "1",
		"line": 21,
		"col": 4
	},
	{
		"type": "comma",
		"start": 572,
		"end": 573,
		"value": ",",
		"line": 21,
		"col": 5
	},
	{
		"type": "number",
		"start": 577,
		"end": 579,
		"value": "10",
		"line": 22,
		"col": 4
	},
	{
		"type": "keyword",
		"start": 580,
		"end": 582,
		"value": "if",
		"line": 22,
		"col": 7
	},
	{
		"type": "keyword",
		"start": 583,
		"end": 587,
		"value": "this",
		"line": 22,
		"col": 10
	},
	{
		"type": "dot",
		"start": 587,
		"end": 588,
		"value": ".",
		"line": 22,
		"col": 14
	},
	{
		"type": "identifier",
		"start": 588,
		"end": 595,
		"value": "isDone?",
		"line": 22,
		"col": 15
	},
	{
		"type": "comma",
		"start": 595,
		"end": 596,
		"value": ",",
		"line": 22,
		"col": 22
	},
	{
		"type": "comment",
		"start": 597,
		"end": 638,
		"value": "// if false, element will not be in tuple",
		"line": 22,
		"col": 24
	},
	{
		"type": "number",
		"start": 642,
		"end": 643,
		"value": "3",
		"line": 23,
		"col": 4
	},
	{
		"type": "bracket_close",
		"start": 646,
		"end": 647,
		"value": "]",
		"line": 24,
		"col": 3
	},
	{
		"type": "semicolon",
		"start": 647,
		"end": 648,
		"value": ";",
		"line": 24,
		"col": 4
	},
	{
		"type": "keyword",
		"start": 652,
		"end": 655,
		"value": "let",
		"line": 26,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 656,
		"end": 661,
		"value": "count",
		"line": 26,
		"col": 7
	},
	{
		"type": "assign",
		"start": 662,
		"end": 663,
		"value": "=",
		"line": 26,
		"col": 13
	},
	{
		"type": "number",
		"start": 664,
		"end": 665,
		"value": "1",
		"line": 26,
		"col": 15
	},
	{
		"type": "dotdot",
		"start": 665,
		"end": 667,
		"value": "..",
		"line": 26,
		"col": 16
	},
	{
		"type": "identifier",
		"start": 667,
		"end": 674,
		"value": "myTuple",
		"line": 26,
		"col": 18
	},
	{
		"type": "bracket_open",
		"start": 674,
		"end": 675,
		"value": "[",
		"line": 26,
		"col": 25
	},
	{
		"type": "number",
		"start": 675,
		"end": 676,
		"value": "2",
		"line": 26,
		"col": 26
	},
	{
		"type": "bracket_close",
		"start": 676,
		"end": 677,
		"value": "]",
		"line": 26,
		"col": 27
	},
	{
		"type": "comment",
		"start": 678,
		"end": 700,
		"value": "// new Tuple [1, 2, 3]",
		"line": 26,
		"col": 29
	},
	{
		"type": "keyword",
		"start": 703,
		"end": 706,
		"value": "let",
		"line": 27,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 707,
		"end": 716,
		"value": "countDown",
		"line": 27,
		"col": 7
	},
	{
		"type": "assign",
		"start": 717,
		"end": 718,
		"value": "=",
		"line": 27,
		"col": 17
	},
	{
		"type": "identifier",
		"start": 719,
		"end": 726,
		"value": "myTuple",
		"line": 27,
		"col": 19
	},
	{
		"type": "bracket_open",
		"start": 726,
		"end": 727,
		"value": "[",
		"line": 27,
		"col": 26
	},
	{
		"type": "number",
		"start": 727,
		"end": 728,
		"value": "1",
		"line": 27,
		"col": 27
	},
	{
		"type": "bracket_close",
		"start": 728,
		"end": 729,
		"value": "]",
		"line": 27,
		"col": 28
	},
	{
		"type": "dotdot",
		"start": 729,
		"end": 731,
		"value": "..",
		"line": 27,
		"col": 29
	},
	{
		"type": "number",
		"start": 731,
		"end": 732,
		"value": "0",
		"line": 27,
		"col": 31
	},
	{
		"type": "comment",
		"start": 733,
		"end": 780,
		"value": "// new Tuple [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]",
		"line": 27,
		"col": 33
	},
	{
		"type": "keyword",
		"start": 783,
		"end": 786,
		"value": "let",
		"line": 28,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 787,
		"end": 803,
		"value": "partitionedTuple",
		"line": 28,
		"col": 7
	},
	{
		"type": "assign",
		"start": 804,
		"end": 805,
		"value": "=",
		"line": 28,
		"col": 24
	},
	{
		"type": "bracket_open",
		"start": 806,
		"end": 807,
		"value": "[",
		"line": 28,
		"col": 26
	},
	{
		"type": "identifier",
		"start": 811,
		"end": 820,
		"value": "countDown",
		"line": 29,
		"col": 4
	},
	{
		"type": "bracket_open",
		"start": 820,
		"end": 821,
		"value": "[",
		"line": 29,
		"col": 13
	},
	{
		"type": "colon",
		"start": 821,
		"end": 822,
		"value": ":",
		"line": 29,
		"col": 14
	},
	{
		"type": "number",
		"start": 822,
		"end": 823,
		"value": "1",
		"line": 29,
		"col": 15
	},
	{
		"type": "bracket_close",
		"start": 823,
		"end": 824,
		"value": "]",
		"line": 29,
		"col": 16
	},
	{
		"type": "comma",
		"start": 824,
		"end": 825,
		"value": ",",
		"line": 29,
		"col": 17
	},
	{
		"type": "identifier",
		"start": 829,
		"end": 838,
		"value": "countDown",
		"line": 30,
		"col": 4
	},
	{
		"type": "bracket_open",
		"start": 838,
		"end": 839,
		"value": "[",
		"line": 30,
		"col": 13
	},
	{
		"type": "number",
		"start": 839,
		"end": 840,
		"value": "2",
		"line": 30,
		"col": 14
	},
	{
		"type": "colon",
		"start": 840,
		"end": 841,
		"value": ":",
		"line": 30,
		"col": 15
	},
	{
		"type": "number",
		"start": 841,
		"end": 842,
		"value": "6",
		"line": 30,
		"col": 16
	},
	{
		"type": "bracket_close",
		"start": 842,
		"end": 843,
		"value": "]",
		"line": 30,
		"col": 17
	},
	{
		"type": "comma",
		"start": 843,
		"end": 844,
		"value": ",",
		"line": 30,
		"col": 18
	},
	{
		"type": "identifier",
		"start": 848,
		"end": 857,
		"value": "countDown",
		"line": 31,
		"col": 4
	},
	{
		"type": "bracket_open",
		"start": 857,
		"end": 858,
		"value": "[",
		"line": 31,
		"col": 13
	},
	{
		"type": "number",
		"start": 858,
		"end": 859,
		"value": "7",
		"line": 31,
		"col": 14
	},
	{
		"type": "colon",
		"start": 859,
		"end": 860,
		"value": ":",
		"line": 31,
		"col": 15
	},
	{
		"type": "bracket_close",
		"start": 860,
		"end": 861,
		"value": "]",
		"line": 31,
		"col": 16
	},
	{
		"type": "comma",
		"start": 861,
		"end": 862,
		"value": ",",
		"line": 31,
		"col": 17
	},
	{
		"type": "bracket_close",
		"start": 865,
		"end": 866,
		"value": "]",
		"line": 32,
		"col": 3
	},
	{
		"type": "semicolon",
		"start": 866,
		"end": 867,
		"value": ";",
		"line": 32,
		"col": 4
	},
	{
		"type": "comment",
		"start": 868,
		"end": 928,
		"value": "// new nested Tuple [[10, 9], [8, 7, 6, 5, 4], [3, 2, 1, 0]]",
		"line": 32,
		"col": 6
	},
	{
		"type": "keyword",
		"start": 931,
		"end": 934,
		"value": "let",
		"line": 33,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 935,
		"end": 953,
		"value": "selectedTupleItems",
		"line": 33,
		"col": 7
	},
	{
		"type": "assign",
		"start": 954,
		"end": 955,
		"value": "=",
		"line": 33,
		"col": 26
	},
	{
		"type": "identifier",
		"start": 956,
		"end": 965,
		"value": "countDown",
		"line": 33,
		"col": 28
	},
	{
		"type": "bracket_open",
		"start": 965,
		"end": 966,
		"value": "[",
		"line": 33,
		"col": 37
	},
	{
		"type": "number",
		"start": 966,
		"end": 967,
		"value": "1",
		"line": 33,
		"col": 38
	},
	{
		"type": "comma",
		"start": 967,
		"end": 968,
		"value": ",",
		"line": 33,
		"col": 39
	},
	{
		"type": "number",
		"start": 969,
		"end": 970,
		"value": "4",
		"line": 33,
		"col": 41
	},
	{
		"type": "comma",
		"start": 970,
		"end": 971,
		"value": ",",
		"line": 33,
		"col": 42
	},
	{
		"type": "number",
		"start": 972,
		"end": 973,
		"value": "9",
		"line": 33,
		"col": 44
	},
	{
		"type": "bracket_close",
		"start": 973,
		"end": 974,
		"value": "]",
		"line": 33,
		"col": 45
	},
	{
		"type": "comment",
		"start": 975,
		"end": 997,
		"value": "// new Tuple [9, 6, 1]",
		"line": 33,
		"col": 47
	},
	{
		"type": "keyword",
		"start": 1001,
		"end": 1004,
		"value": "let",
		"line": 35,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 1005,
		"end": 1013,
		"value": "myObject",
		"line": 35,
		"col": 7
	},
	{
		"type": "assign",
		"start": 1014,
		"end": 1015,
		"value": "=",
		"line": 35,
		"col": 16
	},
	{
		"type": "brace_open",
		"start": 1016,
		"end": 1017,
		"value": "{",
		"line": 35,
		"col": 18
	},
	{
		"type": "identifier",
		"start": 1021,
		"end": 1022,
		"value": "a",
		"line": 36,
		"col": 4
	},
	{
		"type": "colon",
		"start": 1022,
		"end": 1023,
		"value": ":",
		"line": 36,
		"col": 5
	},
	{
		"type": "number",
		"start": 1024,
		"end": 1025,
		"value": "1",
		"line": 36,
		"col": 7
	},
	{
		"type": "comma",
		"start": 1025,
		"end": 1026,
		"value": ",",
		"line": 36,
		"col": 8
	},
	{
		"type": "identifier",
		"start": 1030,
		"end": 1031,
		"value": "b",
		"line": 37,
		"col": 4
	},
	{
		"type": "colon",
		"start": 1031,
		"end": 1032,
		"value": ":",
		"line": 37,
		"col": 5
	},
	{
		"type": "string",
		"start": 1033,
		"end": 1039,
		"value": "coat",
		"line": 37,
		"col": 7
	},
	{
		"type": "keyword",
		"start": 1040,
		"end": 1042,
		"value": "if",
		"line": 37,
		"col": 14
	},
	{
		"type": "keyword",
		"start": 1043,
		"end": 1047,
		"value": "this",
		"line": 37,
		"col": 17
	},
	{
		"type": "dot",
		"start": 1047,
		"end": 1048,
		"value": ".",
		"line": 37,
		"col": 21
	},
	{
		"type": "identifier",
		"start": 1048,
		"end": 1055,
		"value": "isDone?",
		"line": 37,
		"col": 22
	},
	{
		"type": "comma",
		"start": 1055,
		"end": 1056,
		"value": ",",
		"line": 37,
		"col": 29
	},
	{
		"type": "comment",
		"start": 1057,
		"end": 1100,
		"value": "// if false, property will not be in object",
		"line": 37,
		"col": 31
	},
	{
		"type": "identifier",
		"start": 1104,
		"end": 1105,
		"value": "c",
		"line": 38,
		"col": 4
	},
	{
		"type": "colon",
		"start": 1105,
		"end": 1106,
		"value": ":",
		"line": 38,
		"col": 5
	},
	{
		"type": "identifier",
		"start": 1107,
		"end": 1111,
		"value": "cond",
		"line": 38,
		"col": 7
	},
	{
		"type": "question",
		"start": 1112,
		"end": 1113,
		"value": "?",
		"line": 38,
		"col": 12
	},
	{
		"type": "bool",
		"start": 1114,
		"end": 1118,
		"value": "true",
		"line": 38,
		"col": 14
	},
	{
		"type": "colon",
		"start": 1119,
		"end": 1120,
		"value": ":",
		"line": 38,
		"col": 19
	},
	{
		"type": "bool",
		"start": 1121,
		"end": 1126,
		"value": "false",
		"line": 38,
		"col": 21
	},
	{
		"type": "comma",
		"start": 1126,
		"end": 1127,
		"value": ",",
		"line": 38,
		"col": 26
	},
	{
		"type": "comment",
		"start": 1128,
		"end": 1193,
		"value": "// regular ternary - property will always be there, value differs",
		"line": 38,
		"col": 28
	},
	{
		"type": "identifier",
		"start": 1197,
		"end": 1198,
		"value": "d",
		"line": 39,
		"col": 4
	},
	{
		"type": "colon",
		"start": 1198,
		"end": 1199,
		"value": ":",
		"line": 39,
		"col": 5
	},
	{
		"type": "nil",
		"start": 1200,
		"end": 1203,
		"value": "nil",
		"line": 39,
		"col": 7
	},
	{
		"type": "comma",
		"start": 1203,
		"end": 1204,
		"value": ",",
		"line": 39,
		"col": 10
	},
	{
		"type": "brace_close",
		"start": 1207,
		"end": 1208,
		"value": "}",
		"line": 40,
		"col": 3
	},
	{
		"type": "semicolon",
		"start": 1208,
		"end": 1209,
		"value": ";",
		"line": 40,
		"col": 4
	},
	{
		"type": "keyword",
		"start": 1213,
		"end": 1216,
		"value": "let",
		"line": 42,
		"col": 3
	},
	{
		"type": "identifier",
		"start": 1217,
		"end": 1227,
		"value": "partialObj",
		"line": 42,
		"col": 7
	},
	{
		"type": "assign",
		"start": 1228,
		"end": 1229,
		"value": "=",
		"line": 42,
		"col": 18
	},
	{
		"type": "identifier",
		"start": 1230,
		"end": 1238,
		"value": "myObject",
		"line": 42,
		"col": 20
	},
	{
		"type": "bracket_open",
		"start": 1238,
		"end": 1239,
		"value": "[",
		"line": 42,
		"col": 28
	},
	{
		"type": "identifier",
		"start": 1239,
		"end": 1240,
		"value": "a",
		"line": 42,
		"col": 29
	},
	{
		"type": "comma",
		"start": 1240,
		"end": 1241,
		"value": ",",
		"line": 42,
		"col": 30
	},
	{
		"type": "identifier",
		"start": 1242,
		"end": 1243,
		"value": "d",
		"line": 42,
		"col": 32
	},
	{
		"type": "bracket_close",
		"start": 1243,
		"end": 1244,
		"value": "]",
		"line": 42,
		"col": 33
	},
	{
		"type": "comment",
		"start": 1245,
		"end": 1273,
		"value": "// new object {a: 1, d: nil}",
		"line": 42,
		"col": 35
	},
	{
		"type": "brace_close",
		"start": 1275,
		"end": 1276,
		"value": "}",
		"line": 43,
		"col": 2
	},
	{
		"type": "comment",
		"start": 1279,
		"end": 1295,
		"value": "/** with args */",
		"line": 45,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 1297,
		"end": 1311,
		"value": "methodWithArgs",
		"line": 46,
		"col": 2
	},
	{
		"type": "paren_open",
		"start": 1312,
		"end": 1313,
		"value": "(",
		"line": 46,
		"col": 17
	},
	{
		"type": "identifier",
		"start": 1313,
		"end": 1317,
		"value": "arg1",
		"line": 46,
		"col": 18
	},
	{
		"type": "colon",
		"start": 1317,
		"end": 1318,
		"value": ":",
		"line": 46,
		"col": 22
	},
	{
		"type": "identifier",
		"start": 1319,
		"end": 1323,
		"value": "bool",
		"line": 46,
		"col": 24
	},
	{
		"type": "comma",
		"start": 1323,
		"end": 1324,
		"value": ",",
		"line": 46,
		"col": 28
	},
	{
		"type": "identifier",
		"start": 1325,
		"end": 1329,
		"value": "arg2",
		"line": 46,
		"col": 30
	},
	{
		"type": "colon",
		"start": 1329,
		"end": 1330,
		"value": ":",
		"line": 46,
		"col": 34
	},
	{
		"type": "identifier",
		"start": 1331,
		"end": 1336,
		"value": "Tuple",
		"line": 46,
		"col": 36
	},
	{
		"type": "comma",
		"start": 1336,
		"end": 1337,
		"value": ",",
		"line": 46,
		"col": 41
	},
	{
		"type": "identifier",
		"start": 1338,
		"end": 1342,
		"value": "arg3",
		"line": 46,
		"col": 43
	},
	{
		"type": "assign",
		"start": 1343,
		"end": 1344,
		"value": "=",
		"line": 46,
		"col": 48
	},
	{
		"type": "bool",
		"start": 1345,
		"end": 1349,
		"value": "true",
		"line": 46,
		"col": 50
	},
	{
		"type": "comma",
		"start": 1349,
		"end": 1350,
		"value": ",",
		"line": 46,
		"col": 54
	},
	{
		"type": "dotdotdot",
		"start": 1351,
		"end": 1354,
		"value": "...",
		"line": 46,
		"col": 56
	},
	{
		"type": "identifier",
		"start": 1355,
		"end": 1364,
		"value": "therStuff",
		"line": 46,
		"col": 60
	},
	{
		"type": "colon",
		"start": 1364,
		"end": 1365,
		"value": ":",
		"line": 46,
		"col": 69
	},
	{
		"type": "identifier",
		"start": 1366,
		"end": 1371,
		"value": "Thing",
		"line": 46,
		"col": 71
	},
	{
		"type": "bracket_open",
		"start": 1371,
		"end": 1372,
		"value": "[",
		"line": 46,
		"col": 76
	},
	{
		"type": "bracket_close",
		"start": 1372,
		"end": 1373,
		"value": "]",
		"line": 46,
		"col": 77
	},
	{
		"type": "paren_close",
		"start": 1373,
		"end": 1374,
		"value": ")",
		"line": 46,
		"col": 78
	},
	{
		"type": "brace_open",
		"start": 1375,
		"end": 1376,
		"value": "{",
		"line": 46,
		"col": 80
	},
	{
		"type": "dotdotdot",
		"start": 1377,
		"end": 1380,
		"value": "...",
		"line": 46,
		"col": 82
	},
	{
		"type": "brace_close",
		"start": 1381,
		"end": 1382,
		"value": "}",
		"line": 46,
		"col": 86
	},
	{
		"type": "comment",
		"start": 1385,
		"end": 1411,
		"value": "/** with one return val */",
		"line": 48,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 1413,
		"end": 1435,
		"value": "methodThatReturnsBool?",
		"line": 49,
		"col": 2
	},
	{
		"type": "colon",
		"start": 1436,
		"end": 1437,
		"value": ":",
		"line": 49,
		"col": 25
	},
	{
		"type": "identifier",
		"start": 1438,
		"end": 1442,
		"value": "bool",
		"line": 49,
		"col": 27
	},
	{
		"type": "brace_open",
		"start": 1443,
		"end": 1444,
		"value": "{",
		"line": 49,
		"col": 32
	},
	{
		"type": "keyword",
		"start": 1447,
		"end": 1453,
		"value": "return",
		"line": 50,
		"col": 3
	},
	{
		"type": "brace_close",
		"start": 1455,
		"end": 1456,
		"value": "}",
		"line": 51,
		"col": 2
	},
	{
		"type": "comment",
		"start": 1459,
		"end": 1486,
		"value": "/** multiple return vals */",
		"line": 53,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 1488,
		"end": 1510,
		"value": "methodThatReturnsBool?",
		"line": 54,
		"col": 2
	},
	{
		"type": "colon",
		"start": 1511,
		"end": 1512,
		"value": ":",
		"line": 54,
		"col": 25
	},
	{
		"type": "identifier",
		"start": 1513,
		"end": 1517,
		"value": "bool",
		"line": 54,
		"col": 27
	},
	{
		"type": "comma",
		"start": 1517,
		"end": 1518,
		"value": ",",
		"line": 54,
		"col": 31
	},
	{
		"type": "identifier",
		"start": 1519,
		"end": 1525,
		"value": "number",
		"line": 54,
		"col": 33
	},
	{
		"type": "comma",
		"start": 1525,
		"end": 1526,
		"value": ",",
		"line": 54,
		"col": 39
	},
	{
		"type": "identifier",
		"start": 1527,
		"end": 1532,
		"value": "Thing",
		"line": 54,
		"col": 41
	},
	{
		"type": "brace_open",
		"start": 1533,
		"end": 1534,
		"value": "{",
		"line": 54,
		"col": 47
	},
	{
		"type": "keyword",
		"start": 1537,
		"end": 1543,
		"value": "return",
		"line": 55,
		"col": 3
	},
	{
		"type": "bool",
		"start": 1544,
		"end": 1549,
		"value": "false",
		"line": 55,
		"col": 10
	},
	{
		"type": "comma",
		"start": 1549,
		"end": 1550,
		"value": ",",
		"line": 55,
		"col": 15
	},
	{
		"type": "number",
		"start": 1551,
		"end": 1552,
		"value": "5",
		"line": 55,
		"col": 17
	},
	{
		"type": "comma",
		"start": 1552,
		"end": 1553,
		"value": ",",
		"line": 55,
		"col": 18
	},
	{
		"type": "identifier",
		"start": 1554,
		"end": 1557,
		"value": "new",
		"line": 55,
		"col": 20
	},
	{
		"type": "identifier",
		"start": 1558,
		"end": 1563,
		"value": "Thing",
		"line": 55,
		"col": 24
	},
	{
		"type": "brace_close",
		"start": 1565,
		"end": 1566,
		"value": "}",
		"line": 56,
		"col": 2
	},
	{
		"type": "comment",
		"start": 1569,
		"end": 1600,
		"value": "/** method that throws error */",
		"line": 58,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 1602,
		"end": 1610,
		"value": "careful!",
		"line": 59,
		"col": 2
	},
	{
		"type": "brace_open",
		"start": 1611,
		"end": 1612,
		"value": "{",
		"line": 59,
		"col": 11
	},
	{
		"type": "dotdotdot",
		"start": 1613,
		"end": 1616,
		"value": "...",
		"line": 59,
		"col": 13
	},
	{
		"type": "brace_close",
		"start": 1617,
		"end": 1618,
		"value": "}",
		"line": 59,
		"col": 17
	},
	{
		"type": "comment",
		"start": 1621,
		"end": 1669,
		"value": "/** method with bool return that throws error */",
		"line": 61,
		"col": 2
	},
	{
		"type": "identifier",
		"start": 1671,
		"end": 1680,
		"value": "careful?!",
		"line": 62,
		"col": 2
	},
	{
		"type": "colon",
		"start": 1681,
		"end": 1682,
		"value": ":",
		"line": 62,
		"col": 12
	},
	{
		"type": "identifier",
		"start": 1683,
		"end": 1687,
		"value": "bool",
		"line": 62,
		"col": 14
	},
	{
		"type": "brace_open",
		"start": 1688,
		"end": 1689,
		"value": "{",
		"line": 62,
		"col": 19
	},
	{
		"type": "dotdotdot",
		"start": 1690,
		"end": 1693,
		"value": "...",
		"line": 62,
		"col": 21
	},
	{
		"type": "brace_close",
		"start": 1694,
		"end": 1695,
		"value": "}",
		"line": 62,
		"col": 25
	},
	{
		"type": "brace_close",
		"start": 1696,
		"end": 1697,
		"value": "}",
		"line": 63,
		"col": 1
	}
]