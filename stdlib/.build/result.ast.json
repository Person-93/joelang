{
	"kind": "Program",
	"declarations": [
		{
			"joeDoc": {
				"kind": "JoeDoc",
				"content": "/**\n * used for returning a value or an error\n *\n * Example:\n *\n * ```\n * let result = Ok(\"myStuff\");\n * result = Error(MySpecialError.create('Whoops')) if something == 'bad';\n *\n * when result {\n * \tOk(val: string)              -> print val,\n * \tError(error: MySpecialError) -> log(error),\n * }\n * ```\n */"
			},
			"modifiers": [],
			"name": {
				"kind": "Identifier",
				"name": "Result"
			},
			"typeParams": [
				{
					"kind": "TypeParameter",
					"type": {
						"kind": "Identifier",
						"name": "T"
					}
				},
				{
					"kind": "TypeParameter",
					"type": {
						"kind": "Identifier",
						"name": "E"
					},
					"constraint": {
						"kind": "Identifier",
						"name": "Error"
					}
				}
			],
			"extends": [],
			"body": {
				"kind": "BlockStatement",
				"expressions": [
					{
						"kind": "CallExpression",
						"callee": {
							"kind": "Identifier",
							"name": "Ok"
						},
						"args": [
							{
								"kind": "Identifier",
								"name": "T"
							}
						]
					},
					{
						"kind": "CallExpression",
						"callee": {
							"kind": "Identifier",
							"name": "Error"
						},
						"args": [
							{
								"kind": "Identifier",
								"name": "E"
							}
						]
					}
				]
			},
			"kind": "EnumDeclaration"
		}
	]
}